import TelegramBot from "node-telegram-bot-api";

const token = process.env.BOT_TOKEN;
if (!token) {
  throw new Error("‚ùå BOT_TOKEN –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!");
}

const bot = new TelegramBot(token, { webHook: { port: 80 } });

export default async function handler(req, res) {
  if (req.method === "POST") {
    try {
      const update = req.body;
      const chatId = update.message?.chat?.id;
      const text = update.message?.text;

      if (text === "/start") {
        await bot.sendMessage(chatId, "üëã –ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Vercel üöÄ");
      } else if (text) {
        await bot.sendMessage(chatId, `–¢—ã –Ω–∞–ø–∏—Å–∞–ª: ${text}`);
      }

      return res.status(200).send("ok");
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–ø–¥–µ–π—Ç–∞:", err);
      return res.status(500).send("error");
    }
  }

  if (req.method === "GET") {
    try {
      const webhookUrl = `https://${process.env.VERCEL_URL}/api/webhook`;
      await bot.setWebHook(webhookUrl);
      console.log(`‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${webhookUrl}`);
      return res.status(200).send("Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω ‚úÖ");
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:", err);
      return res.status(500).send("–û—à–∏–±–∫–∞ webhook");
    }
  }

  res.status(405).send("Method Not Allowed");
}
