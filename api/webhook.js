import TelegramBot from "node-telegram-bot-api";

// —Ç–æ–∫–µ–Ω –±–µ—Ä—ë–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const token = process.env.BOT_TOKEN;

// —Å–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ (–±–µ–∑ polling)
const bot = new TelegramBot(token);

// —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ
let webhookSet = false;

export default async function handler(req, res) {
  if (req.method === "POST") {
    // —ç—Ç–æ –∑–∞–ø—Ä–æ—Å –æ—Ç Telegram
    bot.processUpdate(req.body);
    return res.status(200).send("ok");
  }

  // –ø—Ä–∏ –ø–µ—Ä–≤–æ–º GET –∑–∞–ø—Ä–æ—Å–µ –≤—ã—Å—Ç–∞–≤–ª—è–µ–º webhook
  if (!webhookSet && process.env.VERCEL_URL) {
    const url = `https://${process.env.VERCEL_URL}/api/webhook`;
    await bot.setWebHook(url);
    webhookSet = true;
    console.log(`Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${url}`);
  }

  res.status(200).send("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Vercel ‚úÖ");
}

// –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text?.toLowerCase() || "";

  if (text === "/start") {
    await bot.sendMessage(chatId, "–ü—Ä–∏–≤–µ—Ç üëã –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Vercel!");
  } else {
    await bot.sendMessage(chatId, `–¢—ã –Ω–∞–ø–∏—Å–∞–ª: ${msg.text}`);
  }
});
