const TelegramBot = require('node-telegram-bot-api');

const token = process.env.BOT_TOKEN;

// –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –≤ webhook-—Ä–µ–∂–∏–º–µ, –±–µ–∑ polling
const bot = new TelegramBot(token, { webHook: true });

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è Vercel
module.exports = async (req, res) => {
  try {
    if (req.method === 'POST') {
      const { body } = req;

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      if (body && body.message) {
        const chatId = body.message.chat.id;
        const text = body.message.text?.trim();

        if (text === '/start') {
          await bot.sendMessage(chatId, '–ü—Ä–∏–≤–µ—Ç, –ï–≥–æ—Ä–∏–∫! ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!');
        } else {
          await bot.sendMessage(chatId, `–¢—ã –Ω–∞–ø–∏—Å–∞–ª: ${text}`);
        }
      }

      // Telegram —Ç—Ä–µ–±—É–µ—Ç –æ—Ç–≤–µ—Ç 200
      res.status(200).json({ ok: true });
    } else {
      // GET-–∑–∞–ø—Ä–æ—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è)
      res.status(200).json({ status: 'Bot webhook active ‚úÖ' });
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞:', error);
    // Telegram—É –≤—Å–µ–≥–¥–∞ –Ω—É–∂–µ–Ω –æ—Ç–≤–µ—Ç 200
    res.status(200).json({ ok: true });
  }
};
