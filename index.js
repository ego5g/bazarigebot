require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');

const token = process.env.BOT_TOKEN;
const bot = new TelegramBot(token, { polling: true });

// –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userStates = {};

bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;
  const userId = msg.from.id;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è
  if (userStates[userId]) {
    handleAdCreation(msg);
    return;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
  if (text === '/start') {
    bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç! üëã\n\n–Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π.\n\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /create —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ.`);
  } else if (text === '/create' || text.toLowerCase().includes('—Å–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ')) {
    startAdCreation(chatId, userId);
  } else {
    bot.sendMessage(chatId, '–ò—Å–ø–æ–ª—å–∑—É–π /create –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è');
  }
});

function startAdCreation(chatId, userId) {
  userStates[userId] = {
    step: 'title',
    data: {}
  };
  
  bot.sendMessage(chatId, 'üìù –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è\n\n–®–∞–≥ 1/4: –í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏—è');
}

function handleAdCreation(msg) {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const text = msg.text;
  const state = userStates[userId];

  if (!state) return;

  switch (state.step) {
    case 'title':
      state.data.title = text;
      state.step = 'description';
      bot.sendMessage(chatId, '‚úèÔ∏è –®–∞–≥ 2/4: –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è');
      break;

    case 'description':
      state.data.description = text;
      state.step = 'price';
      bot.sendMessage(chatId, 'üí∞ –®–∞–≥ 3/4: –í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É (–∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ "–¥–æ–≥–æ–≤–æ—Ä–Ω–∞—è")');
      break;

    case 'price':
      state.data.price = text;
      state.step = 'contact';
      bot.sendMessage(chatId, 'üì± –®–∞–≥ 4/4: –í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (—Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ username)');
      break;

    case 'contact':
      state.data.contact = text;
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
      const ad = state.data;
      const adText = `
üéØ *–ù–û–í–û–ï –û–ë–™–Ø–í–õ–ï–ù–ò–ï*

üìå *–ó–∞–≥–æ–ª–æ–≤–æ–∫:* ${ad.title}

üìù *–û–ø–∏—Å–∞–Ω–∏–µ:*
${ad.description}

üíµ *–¶–µ–Ω–∞:* ${ad.price}

üìû *–ö–æ–Ω—Ç–∞–∫—Ç:* ${ad.contact}

_–û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ ${new Date().toLocaleString('ru-RU')}_
      `;
      
      bot.sendMessage(chatId, adText, { parse_mode: 'Markdown' });
      bot.sendMessage(chatId, '‚úÖ –û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!\n\n–ò—Å–ø–æ–ª—å–∑—É–π /create –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.');
      
      // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      delete userStates[userId];
      break;
  }
}

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...');
