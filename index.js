const TelegramBot = require('node-telegram-bot-api');

const token = process.env.BOT_TOKEN;
const bot = new TelegramBot(token);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è Vercel webhook
module.exports = async (req, res) => {
  try {
    // –¢–æ–ª—å–∫–æ POST –∑–∞–ø—Ä–æ—Å—ã
    if (req.method === 'POST') {
      const { body } = req;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      if (body && body.message) {
        const chatId = body.message.chat.id;
        const text = body.message.text;
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
        if (text === '/start') {
          await bot.sendMessage(chatId, '–ü—Ä–∏–≤–µ—Ç –ï–≥–æ—Ä–∏–∫! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! üëã');
        } else {
          await bot.sendMessage(chatId, `–¢—ã –Ω–∞–ø–∏—Å–∞–ª: ${text}`);
        }
      }
      
      // –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –æ—Ç–≤–µ—á–∞–µ–º Telegram —á—Ç–æ –≤—Å–µ –û–ö
      res.status(200).json({ ok: true });
    } else {
      // GET –∑–∞–ø—Ä–æ—Å - –ø—Ä–æ—Å—Ç–æ —Å—Ç–∞—Ç—É—Å
      res.status(200).json({ status: 'Bot is running' });
    }
  } catch (error) {
    console.error('Error:', error);
    // –î–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ –æ—Ç–≤–µ—á–∞–µ–º 200, —á—Ç–æ–±—ã Telegram –Ω–µ –¥—É–º–∞–ª —á—Ç–æ webhook —Å–ª–æ–º–∞–Ω
    res.status(200).json({ ok: true });
  }
};
